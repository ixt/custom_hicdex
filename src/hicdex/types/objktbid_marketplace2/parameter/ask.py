# generated by datamodel-codegen:
#   filename:  ask.json

from __future__ import annotations

from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Extra


class Token(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    token_id: str


class CurrencyItem(BaseModel):
    class Config:
        extra = Extra.forbid

    fa12: str


class Fa2(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    token_id: str


class CurrencyItem1(BaseModel):
    class Config:
        extra = Extra.forbid

    fa2: Fa2


class CurrencyItem2(BaseModel):
    class Config:
        extra = Extra.forbid

    tez: Dict[str, Any]


class Share(BaseModel):
    class Config:
        extra = Extra.forbid

    amount: str
    recipient: str


class AskParameter(BaseModel):
    class Config:
        extra = Extra.forbid

    token: Token
    currency: Union[CurrencyItem, CurrencyItem1, CurrencyItem2]
    amount: str
    editions: str
    shares: List[Share]
    expiry_time: Optional[str]
    target: Optional[str]
