# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Extra


class CurrencyItem(BaseModel):
    class Config:
        extra = Extra.forbid

    fa12: str


class Fa2(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    token_id: str


class CurrencyItem1(BaseModel):
    class Config:
        extra = Extra.forbid

    fa2: Fa2


class CurrencyItem2(BaseModel):
    class Config:
        extra = Extra.forbid

    tez: Dict[str, Any]


class Share(BaseModel):
    class Config:
        extra = Extra.forbid

    amount: str
    recipient: str


class Token(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    token_id: str


class Asks(BaseModel):
    class Config:
        extra = Extra.forbid

    amount: str
    creator: str
    currency: Union[CurrencyItem, CurrencyItem1, CurrencyItem2]
    editions: str
    expiry_time: Optional[str]
    shares: List[Share]
    target: Optional[str]
    token: Token


class CurrencyItem3(BaseModel):
    class Config:
        extra = Extra.forbid

    fa12: str


class Fa21(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    token_id: str


class CurrencyItem4(BaseModel):
    class Config:
        extra = Extra.forbid

    fa2: Fa21


class CurrencyItem5(BaseModel):
    class Config:
        extra = Extra.forbid

    tez: Dict[str, Any]


class Share1(BaseModel):
    class Config:
        extra = Extra.forbid

    amount: str
    recipient: str


class Token1(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    token_id: Optional[str]


class Offers(BaseModel):
    class Config:
        extra = Extra.forbid

    amount: str
    creator: str
    currency: Union[CurrencyItem3, CurrencyItem4, CurrencyItem5]
    expiry_time: Optional[str]
    shares: List[Share1]
    target: Optional[str]
    token: Token1


class ObjktbidMarketplace2Storage(BaseModel):
    class Config:
        extra = Extra.forbid

    asks: Dict[str, Asks]
    big_map: Dict[str, str]
    metadata: Dict[str, str]
    next_ask_id: str
    next_offer_id: str
    offers: Dict[str, Offers]
    paused: bool
    permission_module: str
    token_registry: str
    upgradable: bool
